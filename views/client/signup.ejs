<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="dist/output.css" rel="stylesheet">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;900&display=swap" rel="stylesheet">
  <title>Sign UP</title>


</head>

<body class="font-[Montserrat]">
  <div class="pt-3 mx-4 mb-96 ">
    <div class="h-96 w-full  bg-[#076AE1] text-center rounded-2xl ">

      <div class="h-auto px-16  shadow-2xl w-[30rem] md:w-[550px] absolute left-1/2  -translate-x-1/2 top-20  text-center rounded-lg bg-white ">
        <div class="flex justify-center">
          <img src="images/offiq blacklogo.png" alt="offiq logo" class="w-40">
        </div>
        <div class="w-full h-100 mb-12">
          <h1 class="text-lg md:text-xl font-bold leading-tight -translate-y-3 ">Create your ACCOUNT</h1>

          <form class="mt-3" action="#" method="POST" id="signupForm">
            <div>
              <label class="block md:text-xs float-left text-gray-700">Full name</label>
              <input oninput="fullnameValidation()" type="text" name="fullname" id="fullname" placeholder="Enter fullname" class="w-full px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none" autofocus="" autocomplete="" required="">
              <P id="fullNameError"></P>
            </div>
            <div>
              <label class="block md:text-xs mt-4 float-left text-gray-700">Email Address</label>
              <input oninput="emailValidation()" type="email" name="email" id="email" placeholder="Enter Email Address" class="w-full px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none" autofocus="" autocomplete="" required="">
            </div>
            <P id="emailError"></P>

            <div>
              <label class="block md:text-xs mt-4 float-left text-gray-700">Mobile Number</label>
              <input oninput="mobileValidation()" type="tel" name="phone" id="phone" placeholder="Enter phone number" pattern="[0-9]{10}" class="w-full  px-4 py-3 rounded-lg placeholder:text-sm bg-gray-200 mt-1 border focus:border-blue-500 focus:bg-white focus:outline-none" autofocus="" autocomplete="" required="">
              <p id="phoneError"></p>
            </div>


            <div class="mt-4">
              <label class="block md:text-xs  float-left text-gray-700">Password</label>
              <input oninput="passwordValidation()" type="password" name="password" id="password" placeholder="Enter Password" minlength="6" class="w-full px-4 py-3 rounded-lg bg-gray-200 mt-1 border focus:border-blue-500
                              focus:bg-white focus:outline-none placeholder:text-sm" required="">
              <p id="passwordError"></p>
            </div>
            <div class="mt-4">
              <label class="block md:text-xs  float-left text-gray-700">Confirm Password</label>
              <input oninput="CpasswordValidation()" type="password" name="Cpassword" id="Cpassword" placeholder="Confirm Password" minlength="6" class="w-full px-4 py-3 rounded-lg bg-gray-200 mt-1 border focus:border-blue-500
                              focus:bg-white focus:outline-none placeholder:text-sm" required="">
              <p id="CpasswordError"></p>

            </div>

            <button type="submit" id="submitButton" class="w-full block bg-indigo-500 hover:bg-indigo-400 focus:bg-indigo-400 text-white font-semibold rounded-lg
                            px-4 py-3 mt-5">Sign Up</button>
          </form>

          <hr class="my-6 border-gray-300 w-full">

          <button class="group h-12 px-11 mt-2 border-2 border-gray-300 rounded-full transition duration-300 hover:border-blue-400 focus:bg-blue-50 active:bg-blue-100">
            <div class="relative flex items-center space-x-7 justify-center">
              <img src="https://tailus.io/sources/blocks/social/preview/images/google.svg" class="absolute left-0 w-5 " alt="google logo">
              <a href="/auth/google">
                <span class="block  w-max font-semibold tracking-wide text-gray-700 text-sm transition duration-300 group-hover:text-blue-600 sm:text-base">Continue
                  with Google</span></a>
            </div>
          </button>

          <p class="mt-8">Already have an account ?<a href="/login" class="text-blue-500 hover:text-blue-700 font-semibold">Sign in to your
              account</a></p>


        </div>
      </div>
    </div>
    <!-- toast -->
    <div id="toast" class="fixed bottom-0 right-0 m-5 p-5 bg-black text-white rounded-lg shadow-lg hidden">
      <div id="progressBar" class="h-1.5 w-full bg-blue-gray-50 rounded-sm -translate-y-3overflow-hidden  transition-all duration-15000 ease-linear">
        <div class="h-full bg-red-700" style="width: 0%;"></div>
      </div>
      <p id="toastMessage" class="mt-2">Error message</p>
    </div>


  </div>


  <!-- toast --> 
  <script>
    function showToast(errorMessage) {

      // Get the toast, toastMessage, and progressBar elements
      const toast = document.getElementById('toast');
      const toastMessage = document.getElementById('toastMessage');
      const progressBar = document.getElementById('progressBar').firstElementChild;

      // Update the message and show the toast
      toastMessage.innerText = errorMessage;
      toast.classList.remove('hidden');

      // Update the width of the progress bar every 0.15 seconds for 5 seconds
      let width = 0;
      const intervalId = setInterval(() => {
        width += 1;
        progressBar.style.width = `${width}%`;

        // After 15 seconds, hide the toast and clear the interval
        if (width >= 100) {
          toast.classList.add('hidden');
          clearInterval(intervalId);
          // Reset the width of the progress bar for the next toast message
          progressBar.style.width = '0%';
        }
      }, 50); // 50 milliseconds * 100 iterations = 5 seconds
    }
  </script>


  <!-- realtime validation -->
  <script>
    //valdation of fullname
    function fullnameValidation() {
      const fullname = document.getElementById('fullname').value.trim();
      const error = document.getElementById('fullNameError');

      if (fullname === '') {

        error.innerText = "Full name should contain at least one non-space character";
      } else {
        error.innerText = "";
      }
    }


    //email validation
    function emailValidation() {
      const email = document.getElementById('email').value
      const error = document.getElementById('emailError')
      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailPattern.test(email)) {
        error.innerText = "Give a valid email"
      } else {
        error.innerText = ""

      }

    }

    //mobile number validation
    function mobileValidation() {
      const mobile = document.getElementById('phone').value;
      const error = document.getElementById('phoneError');

      // Regular expression for a typical 10-digit mobile number
      const mobilePattern = /^[6-9]\d{9}$/;

      if (!mobilePattern.test(mobile)) {
        error.innerText = "Invalid mobile number. Please enter a 10-digit number.";
      } else {
        error.innerText = "";
      }
    }


    //password validation
    function passwordValidation() {
      const password = document.getElementById('password').value
      const error = document.getElementById('passwordError')
      const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\d).{8,}$/;
      if (!passwordPattern.test(password)) {
        error.innerText = "Password must be at least 8 characters and contain both letters and numbers"
      } else {
        error.innerText = ""
      }
    }

    //Confirm password error
    function CpasswordValidation() {
      const password = document.getElementById('password').value
      const Cpassword = document.getElementById('Cpassword').value;
      const error = document.getElementById('CpasswordError');
      if (password !== Cpassword) {
        error.innerText = "Passwords do not match"
      } else {
        error.innerText = ""

      }

    }
  </script>

  <script>
    const signupForm = document.getElementById('signupForm');
    const submitButton = document.getElementById('submitButton');

    signupForm.addEventListener('submit', (event) => {
      event.preventDefault(); // Prevent default form submission

      const fullname = signupForm.fullname.value.trim();
      const email = signupForm.email.value;
      const password = signupForm.password.value;
      const confirmPassword = signupForm.Cpassword.value;
      const mobile = signupForm.phone.value
      const errors = [];

      if (fullname === '') {

        errors.push("Full name should contain at least one non-space character");
      }
      if (password !== confirmPassword) {
        errors.push('Passwords do not match');
      }

      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailPattern.test(email)) {
        errors.push('Invalid email format');
      }

      const mobilePattern = /^[6-9]\d{9}$/;
      if (!mobilePattern.test(mobile)) {
        errors.push('Invalid Mobile numeber format');
      }

      // Password validation: at least 8 characters with a combination of letters and numbers
      const passwordPattern = /^(?=.*[a-zA-Z])(?=.*\d).{8,}$/;
      if (!passwordPattern.test(password)) {
        errors.push('Password must be at least 8 characters and contain both letters and numbers');
      }

      if (errors.length > 0) {
        // Display error messages to the user
        const errorMessage = errors.join('\n');
        showToast(errorMessage)

      } else {
        // Submit the form if there are no errors
        signupForm.submit();
      }
    });
  </script>
  <script>
    if (window.history.replaceState) {
      window.history.replaceState(null, null, window.location.href);
    }
  </script>
  <script src="https://kit.fontawesome.com/2129bb9b13.js" crossorigin="anonymous"></script>
  <script src="login.js"></script>
</body>

</html>