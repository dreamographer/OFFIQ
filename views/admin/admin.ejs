<%-include('adminHeader')%>
<!-- cropperjs -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropper/2.3.4/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/0.8.1/cropper.min.js"></script>
<div class="flex-1 flex w-screen overflow-x-hidden">

  <div class="p-2 fixed  h-screen bg-white w-60 flex-col hidden md:flex " id="sideNav">
    <nav class="">
      <a class="block py-2.5 px-4 my-3 rounded transition duration-200 bg-gradient-to-r from-cyan-400 to-[#076AE1] text-white" href="/admin">
        <i class="fas fa-home mr-2"></i>Dashboard
      </a>
      <a class="block text-gray-500 py-2.5 px-4 my-3 rounded transition duration-200 hover:bg-gradient-to-r hover:from-cyan-400 hover:to-[#076AE1] hover:text-white" href="/admin/userMangement">
        <i class="fas fa-users mr-2"></i>User Management
      </a>
      <a class="block text-gray-500 py-2.5 px-4 my-3 rounded transition duration-200 hover:bg-gradient-to-r hover:from-cyan-400 hover:to-[#076AE1] hover:text-white" href="/admin/categoryManagement">
        <i class="fa-solid fa-boxes-stacked mr-2"></i>Category Management
      </a>
      <a class="block text-gray-500 py-2.5 px-4 my-3 rounded transition duration-200 hover:bg-gradient-to-r hover:from-cyan-400 hover:to-[#076AE1] hover:text-white" href="/admin/productManagement">
        <i class="fas fa-store mr-2"></i>Product Management
      </a>
      <a class="block text-gray-500 py-2.5 px-4 my-3 rounded transition duration-200 hover:bg-gradient-to-r hover:from-cyan-400 hover:to-[#076AE1] hover:text-white" href="/admin/orderManagement">
        <i class="fas fa-exchange-alt mr-2"></i>Order Management
      </a>
      <a class="block text-gray-500 py-2.5 px-4 my-3 rounded transition duration-200 hover:bg-gradient-to-r hover:from-cyan-400 hover:to-[#076AE1] hover:text-white" href="/admin/couponManagement">
        <i class="fa-sharp fas fa-regular fa-tag"></i> Coupon Mangement
      </a>
      <a class="block text-gray-500 py-2.5 px-4 my-3 rounded transition duration-200 hover:bg-gradient-to-r hover:from-cyan-400 hover:to-[#076AE1] hover:text-white" href="/admin/report">
        <i class="fas fa-file-alt mr-2"></i>Report
      </a>
      <a class="block text-gray-500 py-2.5 px-4 my-2 rounded transition duration-200 hover:bg-gradient-to-r hover:from-cyan-600 hover:to-[#076AE1] hover:text-white mt-auto" href="/admin/logout">
        <i class="fas fa-sign-out-alt mr-2"></i>Logout
      </a>
    </nav>
  </div>
  <!-- BOdy part -->
  <div class="w-full ml-60">
    <div class="flex gap-16 justify-center p-5 text-center">
      <div class="w-40 flex-col bg-white rounded-xl">
        <p class="font-bold text-2xl"><%=totalDaySale %></p>
        <h1>Order</h1>
        <p>Today</p>
      </div>
      <div class="w-40 flex-col bg-white rounded-xl">
        <p class="font-bold text-2xl"><%=totalMonthSale %></p>
        <h1>Order </h1>
        <p>This Month</p>
      </div>
      <div class="w-40 flex-col bg-white rounded-xl">
        <p class="font-bold text-2xl">â‚¹<%=Monthprofit %></p>
        <h1>Profit</h1>
        <p>This month</p>
      </div>
    </div>
    <div class=" w-full flex gap-10 justify-center p-5">
      <h1 class="font-black text-4xl">Report</h1>
      <div class="flex text-center  items-center gap-5">
        <div>
          <input type="radio" name="filter" id="month" onchange="updateChart('MONTHLY')" checked><label for="month">Monthly</label>
        </div>
        <div>
          <input type="radio" name="filter" id="year" onchange="updateChart('YERALY')"><label for="year">Yearly</label>
        </div>
      </div>
    </div>
    <div class="flex  gap-10 justify-center items-center">
      <div>
        <h1 class="text-center font-semibold p-5">Total Sales</h1>
        <div style="width: 400px;"><canvas id="sales"></canvas></div>
      </div>
      <div>

        <h1 class="text-center font-semibold p-5">Sales By Category</h1>
        <div style="width: 300px;"><canvas id="Category"></canvas></div>
      </div>
    </div>

    <div class="w-full text-center pt-10 pb-10 ">
      <form action="/admin/addBanner" method="post" enctype="multipart/form-data">
        <h2 class="font-black text-2xl mb-5">Banner Management</h2>
        <section>
          <label for="dropzone-file" class="mx-auto cursor-pointer flex w-full max-w-lg flex-col items-center rounded-xl border-2 border-dashed border-blue-400 bg-white p-2 text-center">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-blue-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
            </svg>

            <h2 class="mt-4 text-xl font-medium text-gray-700 tracking-wide">Banner Image</h2>

            <p class="mt-2 text-gray-500 tracking-wide">Upload or darg & drop Banner file SVG, PNG, JPG or GIF. </p>

            <input id="dropzone-file" type="file" name="bannerImage" class="hidden" />
        </section>

        <div id="preview" class="flex flex-wrap gap-2 justify-center">
          <% if (banner) { %>


          <% banner.forEach((banner,i)=> { %>
          <div class="mt-10">
            <img src="<%= banner.imageUrl[0] %>" alt="product image" class="w-[400px] h-[300px]">
            <button class="remove-image" data-image="<%=i%> " data-id="<%=banner._id%>" type="button">Remove</button>
          </div>
          <% }); %>
          <% } %>

        </div>
        <div id="croppedImageContainer" class="h-64 overflow-auto ">

        </div>
        <div>
          <button type="button" class="bg-blue-500 z-50 text-white rounded-xl px-4" id="save"></button>
        </div>
        <div class="flex justify-center">
          <button type="submit" class="w-52 block bg-indigo-500  z-50 hover:bg-indigo-400 focus:bg-indigo-400 text-white font-semibold rounded-lg
          px-4 py-3 mt-5">ADD</button>

        </div>
      </form>
    </div>

  </div>
</div>


<!-- cropper js -->
<script>
  // Get references to elements
  const fileInput = document.getElementById('dropzone-file');
  const croppedImageContainer = document.getElementById('croppedImageContainer');

  // Initialize Cropper.js for multiple images
  let croppers = [];
  const selectedFiles = [];
  fileInput.addEventListener('change', (e) => {
    const files = e.target.files;

    // Loop through selected files
    for (let i = 0; i < files.length; i++) {
      const file = files[i];

      // Ensure the file is an image
      if (file.type.startsWith('image/')) {
        // Create a new FileReader to read the selected image
        const reader = new FileReader();

        reader.onload = (e) => {
          // Create an image element and set its source to the selected file
          const img = new Image();
          img.src = e.target.result;

          // Append the image to the container
          croppedImageContainer.appendChild(img);

          // Initialize Cropper.js on the image
          const cropper = new Cropper(img, {

            aspectRatio: 20 / 9, // Set the aspect ratio as needed
            viewMode: 1, // Set the view mode as needed

          });

          // Store the cropper instance in the croppers array
          croppers.push(cropper);
        };

        reader.readAsDataURL(file);
      }
    }
  });

  // Add a save button for the cropped images
  let saveButton = document.getElementById('save');
  saveButton.textContent = 'Save';
  saveButton.onclick = function() {
    // Loop through the croppers and save each cropped image
    croppers.forEach((cropper, index) => {
      let canvas = cropper.getCroppedCanvas();
      canvas.toBlob(function(blob) {
        // Create a new blob URL for the cropped image
        let croppedImageUrl = URL.createObjectURL(blob);
        let fileName = `cropped_${index}.jpeg`;

        const file = new File([blob], fileName, {
          type: 'image/jpeg'
        });
        selectedFiles.push(file)
        // Create a new FormData object and append the Blob
        let formData = new FormData();
        formData.append(`croppedImage_${index}`, file);

      }, 'image/jpeg');
    });
    const dataTransfer = new DataTransfer();
    selectedFiles.forEach(file => {
      dataTransfer.items.add(file);

    });
    fileInput.files = dataTransfer.files;
  };
</script>

<!-- delete existing image -->
<script>
  // Get all the "remove" buttons
  const removeButtons = document.querySelectorAll('.remove-image');
  removeButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Get the image name from the data attribute
      const imageName = button.dataset.image;
      const bId = button.dataset.id;
      // Send a request to the server to remove the image
      fetch('/admin/removeBannerImage', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            imageName,
            bId
          })
        })
        .then(response => {
          // Handle the response from the server
          if (response.ok) {
            // Image removed successfully

            window.location.reload()
          } else {
            // Error occurred while removing the image
            console.error('Error removing image');
          }
        })
        .catch(error => {
          // Handle any network or server errors
          console.error('Network or server error:', error);
        });
    });
  });
</script>


<!-- chart js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
<script>
  let myChart;
  let categoryChart

  function updateChart(filter) {
    // Fetch new data based on the selected FILTER
    fetch('/admin/getData', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          filter: filter
        })
      })
      .then((response) => {
        return response.json()
      })
      .then((data) => {
        salesChart(data, data.filter);
      })
  }

  async function salesChart(data, filter) { //function for generating the chart
    if (myChart) {
      myChart.destroy();
    }
    myChart = new Chart(
      document.getElementById('sales'), {
        type: 'line',
        scales: {
          y: {
            beginAtZero: true
          }
        },
        data: {
          labels: data.saleData.map(row => row.month ?? row.year),
          datasets: [{
            barPercentage: 1,
            barThickness: 90,
            label: `${filter} SALES`,
            data: data.saleData.map(row => row.count),
          }]
        }
      }
    );

    if (categoryChart) {
      categoryChart.destroy();
    }

    categoryChart = new Chart(
      document.getElementById('Category'), {
        type: 'pie',
        scales: {
          y: {
            beginAtZero: true
          }
        },
        data: {
          labels: data.categoryData.map(row => row.category),
          datasets: [{
            barPercentage: 1,
            barThickness: 90,
            label: `${filter} SAles`,
            data: data.categoryData.map(row => row.itemCount),
          }]
        }
      }
    );
  }
  window.onload = updateChart('MONTHLY')
</script>

<script>
  const menuBtn = document.getElementById('menuBtn');
  const sideNav = document.getElementById('sideNav');
  menuBtn.addEventListener('click', () => {
    sideNav.classList.toggle('hidden');
  });
</script>
<script src="https://kit.fontawesome.com/2129bb9b13.js" crossorigin="anonymous"></script>
</body>

</html>